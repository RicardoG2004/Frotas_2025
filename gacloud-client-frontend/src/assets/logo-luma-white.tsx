import React, { forwardRef } from 'react'
import { Link } from 'react-router-dom'
import { cn } from '@/lib/utils'

type LogoLumaWhiteProps = React.HTMLAttributes<HTMLDivElement> & {
  to?: string
  disableLink?: boolean
  width?: number
  height?: number
}

export const LogoLumaWhite = forwardRef<HTMLDivElement, LogoLumaWhiteProps>(
  (
    { width, height, to = '/', disableLink = false, className, ...props },
    ref
  ) => {
    // Calculating base size based on props
    const baseSize = {
      width: width ?? 50,
      height: height ?? 50,
    }

    const logoContent = (
      <svg
        width={baseSize.width}
        height={baseSize.height}
        viewBox='0 0 1383.3071 750'
        xmlns='http://www.w3.org/2000/svg'
        className={cn('text-foreground', className)}
        role='img'
        aria-label='Luma Logo'
      >
        <g>
          <path
            d='m 1070.1248,175.80814 c 124.4078,15.15012 221.6048,121.85821 221.6048,250.1902 v 35.13354 161.36293 45.19146 c 0,43.4178 -35.5217,78.93904 -78.9395,78.93904 -43.4178,0 -78.939,-35.52124 -78.939,-78.93904 v -61.5242 -145.03019 -43.76516 c 0,-19.80223 -6.097,-38.25216 -16.5026,-53.56111 18.9634,-58.43474 6.0895,-125.02857 -41.4668,-181.22051 z m -29.55,145.86938 c -0.8131,-0.0224 -1.6259,-0.0332 -2.4462,-0.0332 0.8203,0 1.6331,0.011 2.4462,0.0332'
            fill='#ffffff'
            fillRule='evenodd'
          />
          <path
            d='m 1028.5986,173.94942 c 2.0918,0 4.1795,0.0261 6.2597,0.0777 l 0.2181,0.003 0.2585,0.0112 h 0.073 c 1.7365,0.0478 3.466,0.11432 5.1917,0.19949 l 0.4766,0.022 0.9865,0.0518 c 1.6149,0.0886 3.2259,0.18832 4.8295,0.3067 l 1.7885,0.13669 0.4732,0.0408 0.4729,0.0403 2.834,0.25507 0.473,0.0445 2.8231,0.29168 0.4694,0.052 0.4693,0.0515 0.9386,0.10721 0.4693,0.0553 0.4654,0.0556 0.4695,0.0554 5.7569,6.77696 c 47.5563,56.19194 60.4301,122.78577 41.467,181.22051 l -0.1481,-0.2144 -0.8535,-1.22669 -0.4545,-0.63543 -0.8316,-1.13822 -0.2178,-0.29914 -0.074,-0.10347 -0.3806,-0.49535 -0.6947,-0.90913 -0.5245,-0.66864 -0.078,-0.0998 -0.9017,-1.11948 -0.041,-0.0481 -0.8017,-0.96077 -0.2364,-0.28094 -0.7762,-0.9054 -0.9496,-1.07509 -0.07,-0.0776 -0.8057,-0.88688 -0.089,-0.0959 -0.9828,-1.04966 -0.1,-0.10721 -0.3104,-0.31755 -0.9642,-0.99057 -0.5135,-0.51705 -0.1183,-0.11838 -1.0274,-1.00143 -0.1147,-0.1072 -0.6612,-0.62447 -0.5692,-0.53568 -0.7501,-0.69101 -1.0716,-0.95703 -0.1845,-0.15883 -0.7393,-0.6431 -0.1624,-0.1402 -1.0975,-0.92404 -0.7687,-0.62798 -0.6503,-0.52472 -0.8167,-0.64288 v -0.003 l -1.1381,-0.87592 -0.1292,-0.096 -0.5323,-0.399 -1.5702,-1.14557 -0.084,-0.0628 -1.5779,-1.09372 -0.5211,-0.35109 -0.2734,-0.18459 -1.2046,-0.79075 -0.159,-0.10348 -0.3289,-0.20695 -1.1527,-0.72049 -0.7501,-0.46202 -1.5708,-0.93127 -0.4246,-0.24389 -1.1198,-0.62798 -1.1786,-0.6431 -1.2749,-0.67248 -0.3955,-0.20312 -1.7034,-0.85356 -0.1919,-0.0926 -0.078,-0.0369 -1.8958,-0.8905 -0.1958,-0.0886 -1.7738,-0.77957 -0.7759,-0.32906 -1.3007,-0.53195 -0.3769,-0.15543 -0.059,-0.022 -0.067,-0.0258 -1.8772,-0.71336 -0.3289,-0.12189 -1.8365,-0.65406 -0.2216,-0.0776 -0.3473,-0.11433 -1.7737,-0.57667 -0.1699,-0.0516 -1.9771,-0.59498 -0.5319,-0.15138 -1.9697,-0.53601 -0.041,-0.011 -1.9768,-0.48406 -0.5174,-0.1221 -2.0507,-0.44712 -0.1259,-0.0258 -1.8549,-0.35832 -0.6022,-0.11093 -1.9696,-0.32906 -0.4102,-0.0627 -2.1504,-0.30297 -0.022,-0.003 -1.988,-0.22898 -0.7094,-0.074 -1.803,-0.16245 -0.2884,-0.0224 -0.2585,-0.0147 -1.8184,-0.11838 -0.3544,-0.022 -0.3142,-0.0149 -2.1209,-0.0774 h -0.026 c -0.8129,-0.0224 -1.6257,-0.0332 -2.4459,-0.0332 -52.64837,0 -95.72253,43.07416 -95.72253,95.72241 v 162.29727 l -0.0224,0.0186 0.0224,1.27108 c 0,87.46018 -68.68174,159.64101 -154.77077,165.30189 v -66.46076 c -0.8426,-20.00545 0,-43.24044 0,-57.30035 V 425.99834 410.26091 l 0.50247,0.0848 c 8.15502,-131.40993 118.1741,-236.39633 251.54623,-236.39633'
            fill='#ffffff'
            fillRule='evenodd'
          />
          <path
            d='m 264.71053,596.07817 c 1.57044,0.0813 3.14854,0.11839 4.73344,0.11839 -1.5849,0 -3.16651,-0.0371 -4.73344,-0.11839'
            fill='#ffffff'
            fillRule='evenodd'
          />
          <path
            d='M 217.96344,743.97585 C 97.779351,726.32073 4.7579285,622.12881 4.7579285,497.24822 V 481.09294 262.10061 82.313842 c 0,-43.417801 35.5213545,-78.9391555 78.9391555,-78.9391555 43.417806,0 78.939046,35.5213545 78.939046,78.9391555 v 19.780198 378.9989 19.3811 c 0,7.02809 0.77595,13.88627 2.23195,20.49334 l -0.008,-0.0262 -0.003,0.0112 c -31.81138,94.88387 -9.68129,179.75355 50.10971,222.56552 z'
            fill='#ffffff'
            fillRule='evenodd'
          />
          <path
            d='m 514.59788,364.33033 v 111.01678 21.90111 c 0,137.15971 -112.21398,249.37709 -249.37743,249.37709 -13.31727,0 -26.39811,-1.07125 -39.16819,-3.10743 -59.79132,-42.81197 -81.92141,-127.68165 -50.11004,-222.56552 l 0.003,-0.0112 c 9.44112,42.90054 47.87074,75.25538 93.49802,75.25538 52.64858,0 95.72274,-43.07428 95.72274,-95.72252 V 380.49657 366.07439 c 0,-105.67334 86.4513,-192.12497 192.12103,-192.12497 105.66994,0 192.12124,86.45163 192.12124,192.12497 v 43.50297 336.24635 C 666.5895,737.66836 601.18203,667.86735 600.00686,583.25986 l -0.0295,-0.0186 v -2.2872 -216.6237 c 0,-23.47888 -19.20746,-42.68602 -42.68635,-42.68602 h -0.008 c -23.47549,0 -42.68635,19.21086 -42.68635,42.68602'
            fill='#ffffff'
            fillRule='evenodd'
          />
          <path
            d='m 1335.0946,180.5316 c 11.9989,0 22.8627,4.86454 30.7261,12.72843 7.8639,7.86335 12.7285,18.72714 12.7285,30.7261 0,11.99862 -4.8653,22.86274 -12.7285,30.72598 -7.8634,7.86422 -18.7272,12.72876 -30.7261,12.72876 -11.9987,0 -22.8628,-4.86509 -30.7263,-12.72876 -7.8634,-7.86324 -12.7286,-18.72736 -12.7286,-30.72598 0,-11.99896 4.8647,-22.86275 12.7286,-30.7261 7.8635,-7.86323 18.7276,-12.72843 30.7263,-12.72843 z m 25.7464,17.70796 c -6.5877,-6.5881 -15.6914,-10.66397 -25.7464,-10.66397 -10.0551,0 -19.1584,4.07587 -25.7465,10.66397 -6.5884,6.58755 -10.664,15.6915 -10.664,25.74657 0,10.05506 4.0756,19.15835 10.664,25.74645 6.5881,6.58843 15.6914,10.66408 25.7465,10.66408 10.055,0 19.1587,-4.07565 25.7464,-10.66408 6.5881,-6.5881 10.6638,-15.69139 10.6638,-25.74645 0,-10.05507 -4.0757,-19.15902 -10.6638,-25.74657'
            fill='#ffffff'
          />
        </g>
      </svg>
    )

    // If the link is disabled, just render the SVG
    if (disableLink) {
      return (
        <div ref={ref} {...props}>
          {logoContent}
        </div>
      )
    }

    // Otherwise, wrap the SVG with the Link component
    return (
      <div ref={ref} {...props}>
        <Link to={to} className='transition-opacity hover:opacity-80'>
          {logoContent}
        </Link>
      </div>
    )
  }
)

LogoLumaWhite.displayName = 'LogoLumaWhite'
